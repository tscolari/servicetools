// Code generated by mockery v2.35.3. DO NOT EDIT.

package server

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockHTTPRegisterFunc is an autogenerated mock type for the HTTPRegisterFunc type
type MockHTTPRegisterFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: handle
func (_m *MockHTTPRegisterFunc) Execute(handle func(string, func(http.ResponseWriter, *http.Request))) {
	_m.Called(handle)
}

// NewMockHTTPRegisterFunc creates a new instance of MockHTTPRegisterFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHTTPRegisterFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHTTPRegisterFunc {
	mock := &MockHTTPRegisterFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
